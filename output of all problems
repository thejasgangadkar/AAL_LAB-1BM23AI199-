Binary Search:

Enter the number of elements (up to 1000): 10
Array elements (sorted):
1 9 13 21 33 47 58 60 77 95 
Random key to search for: 33
Element 33 is found at index 4.
Time Taken in seconds: 0.000001




Binary Search(Bubble Sort):

Enter the number of elements (up to 1000): 10
Array elements before sorting:
67 45 82 11 93 1 58 24 90 36 
Array elements after sorting:
1 11 24 36 45 58 67 82 90 93 
Random key to search for: 45
Element 45 is found at index 4.
Time Taken in seconds: 0.000001




Bubble Sort Algorithm:

Enter the number of elements in the array: 10
array before bubble sort:
54 13 89 73 40 16 4 56 12 38 

array after bubble sort:
4 12 13 16 38 40 54 56 73 89 
Count: 31
Time taken for bubble sort: 0.000016 seconds




Dijkstra's Algorithm:

Vertex  Distance from Source
0               0
1               4
2               12
3               19
4               21
5               11
6               9
7               8
8               14




Floyd-Warshall Algorithm:

Shortest distances between every pair of vertices:
0	3	99999	99999
2	0	99999	99999
99999	7	0	1
6	10	99999	0




Heap Sort:

Unsorted array: 
12 11 13 5 6 7 
Sorted array: 
5 6 7 11 12 13 




Insertion Sort:

Original array: 
20 10 40 30 60 50 70 
Sorted array: 
10 20 30 40 50 60 70 




Kruskal's Algorithm:

Edge     Weight
A - B    2
B - C    3
B - E    5
A - D    6
Total cost of MST: 16




Linear Search:

Enter the number of elements (up to 1000): 10
Array elements:
31 67 49 31 53 20 94 42 95 72 
Random key to search for: 31
Element 31 is found 2 times.
Time Taken for search in seconds: 0.000002




Merge Sort:

Original array: 38 27 43 3 9 82 10 
Sorted array: 3 9 10 27 38 43 82 




N Queens Problem:

Solution:
Q . . . . . . . 
. . . . Q . . . 
. . . . . . . Q 
. . . . . Q . . 
. . Q . . . . . 
. . . . . . Q . 
. Q . . . . . . 
. . . Q . . . . 




Pattern Matching:

Text: NOBODY NOTICES HIM
Pattern: HIM
Pattern found at index 15




Prims Algorithm:

Edge    Weight
0 - 1   2
1 - 2   3
0 - 3   6
1 - 4   5




Quick Sort:

Enter the number of elements in the array: 10
Array before quick sort:
47 83 58 5 90 35 25 79 74 22 

Array after quick sort:
5 22 25 35 47 58 74 79 83 90 

Time taken for quick sort: 0.000012 seconds




Selection Sort:

Enter the number of elements in the array: 10
Array before selection sort:
47 26 83 12 65 34 79 3 55 91 

Array after selection sort:
3 12 26 34 47 55 65 79 83 91 

Number of swaps performed: 8
Time taken for selection sort: 0.000011 seconds




Topological Sorting:

Enter the number of vertices: 6
Enter the number of edges: 6
Enter the edges (u -> v):
5 2
5 0
4 0
4 1
2 3
3 1
Topological Sort: 5 4 2 3 1 0 




Travelling Salesperson Problem:

Minimum Cost: 80
Optimal Path: 0 1 3 2 





