#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 10

int graph[MAX_VERTICES][MAX_VERTICES];  
int visited[MAX_VERTICES];  
int stack[MAX_VERTICES];  
int top = -1; 

void dfs(int vertex, int n) {
    visited[vertex] = 1;  
	int i;
    for ( i = 0; i < n; i++) {
        if (graph[vertex][i] == 1 && !visited[i]) {  
            dfs(i, n);  
        }
    }

    stack[++top] = vertex;
}

void topologicalSort(int n) {
	int i;
    for ( i = 0; i < n; i++) {
        visited[i] = 0;
    }

    for ( i = 0; i < n; i++) {
        if (!visited[i]) {
            dfs(i, n);  
        }
    }

    printf("Topological Sort: ");
    while (top != -1) {
        printf("%d ", stack[top--]);
    }
    printf("\n");
}

int main() {
    int n, edges, u, v;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    
	int i,j;
    for ( i = 0; i < n; i++) {
        for ( j = 0; j < n; j++) {
            graph[i][j] = 0;
        }
    }

    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    printf("Enter the edges (u -> v):\n");
    for ( i = 0; i < edges; i++) {
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;  
    }

    topologicalSort(n);

    return 0;
}
